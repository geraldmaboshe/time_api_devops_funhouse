name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  publish_image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build image
        run: docker build ./time_api/ -t ${{ vars.DOCKERHUB_USERNAME }}/time-api:latest

      - name: Push image to Docker Hub
        run: | 
          docker login -u ${{ vars.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
          docker push ${{ vars.DOCKERHUB_USERNAME }}/time-api:latest

  deploy:
    runs-on: ubuntu-latest
    needs: publish_image
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.0.0

      - name: Initialize Terraform
        run: terraform init
        working-directory: ./terraform
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GCP_SA_KEY }}

      - name: Terraform Apply
        id: apply
        continue-on-error: true
        run: terraform apply -auto-approve
        working-directory: ./terraform
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GCP_SA_KEY }}

      - name: Terraform Destroy on Failure
        if: failure()
        run: |
          echo "Terraform apply failed. Attempting to destroy resources..."
          terraform destroy -auto-approve
        working-directory: ./terraform
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GCP_SA_KEY }}

      - name: Check Final Status
        if: failure()
        run: |
          echo "Terraform apply failed and resources were destroyed."
          exit 1

  test:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GCP_SA_KEY }}

      - name: Initialize Terraform
        run: terraform init
        working-directory: ./terraform
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GCP_SA_KEY }}

      - name: Install curl
        run: sudo apt-get install -y curl

      - name: Test API endpoint
        run: |
          LOAD_BALANCER_IP=$(terraform output -raw load_balancer_ip)
          RESPONSE=$(curl -s http://$LOAD_BALANCER_IP/time)
          echo "Response: $RESPONSE"
          if [[ "$RESPONSE" != *"current_time"* ]]; then
            echo "API test failed"
            exit 1
          fi
        working-directory: ./terraform
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GCP_SA_KEY }}
